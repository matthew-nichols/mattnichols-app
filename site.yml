---
- hosts: all
  become: true
  gather_facts: true
  tasks:
    - name: update apt cache
      apt: update_cache=yes cache_valid_time=86400
    - name: add nginx apt key
      apt_key:
        state: present
        url: https://nginx.org/keys/nginx_signing.key
    - name: add nginx mainline apt repository
      apt_repository:
        state: present
        repo: deb http://nginx.org/packages/mainline/ubuntu/ {{ ansible_lsb.codename }} nginx
    - name: install nginx
      apt: name=nginx state=present
    - name: remove nginx default site
      file:
        state: absent
        path: /etc/nginx/conf.d/default.conf
      notify: reload nginx
    - name: create /srv/letsencrypt
      file:
        state: directory
        path: /srv/letsencrypt
    - name: nginx redirect config
      copy:
        dest: /etc/nginx/conf.d/redirect.conf
        content: |
          server {
            listen 80 default_server;
            listen [::]:80 default_server;
            location /.well-known/acme-challenge {
              root /srv/letsencrypt;
            }
            location / {
              return 301 https://$host$request_uri;
            }
          }
      notify: reload nginx
    - name: ensure nginx started
      service: name=nginx state=started
      # make sure nginx is set up to allow certbot to work
    - meta: flush_handlers
    - name: add certbot repo
      apt_repository:
        repo: ppa:certbot/certbot
    - name: install certbot
      apt: state=present name=certbot
    - name: activate certificates
      command: >
        certbot certonly --noninteractive --cert-name main --webroot
        --deploy-hook "service nginx reload" -w /srv/letsencrypt
        --agree-tos --email {{ letsencrypt_email }}
        -d mattnichols.app,www.mattnichols.app,apl.mattnichols.app,music.mattnichols.app,minimalpairs.mattnichols.app
        --must-staple
      args:
        creates: /etc/letsencrypt/live/main/
    - name: create website
      file:
        state: directory
        dest: /srv/mattnichols
    - name: index file
      copy:
        dest: /srv/mattnichols/index.html
        content: |
          Hello, world!
    - name: nginx main config
      copy:
        dest: /etc/nginx/conf.d/mattnichols.conf
        content: |
          server {
            listen 443 ssl http2;
            listen [::]:443 ssl http2;
            server_name mattnichols.app www.mattnichols.app;
            ssl_certificate_key /etc/letsencrypt/live/main/privkey.pem;
            ssl_certificate /etc/letsencrypt/live/main/fullchain.pem;

            # ssl sessions
            ssl_session_timeout 1d;
            ssl_session_cache shared:SSL:50m;
            ssl_session_tickets off;

            # modern mozilla configuration
            ssl_protocols TLSv1.2;
            ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
            ssl_prefer_server_ciphers on;

            # configure OCSP stapling
            ssl_trusted_certificate /etc/letsencrypt/live/main/chain.pem;
            ssl_stapling on;
            ssl_stapling_verify on;

            # needed for OCSP stapling
            resolver 8.8.8.8;

            # not really needed but why not (.app already preloaded)
            add_header Strict-Transport-Security max-age=15768000;

            location / {
              root /srv/mattnichols;
            }
          }
      notify: reload nginx
  handlers:
    - name: reload nginx
      service: name=nginx state=reloaded
