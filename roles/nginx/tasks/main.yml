---
- name: add nginx apt key
  apt_key:
    state: present
    url: https://nginx.org/keys/nginx_signing.key
- name: add nginx mainline apt repository
  apt_repository:
    state: present
    repo: deb http://nginx.org/packages/mainline/ubuntu/ {{ ansible_lsb.codename }} nginx
- name: install nginx
  apt: name=nginx state=present
- name: remove nginx default site
  file:
    state: absent
    path: /etc/nginx/conf.d/default.conf
  notify: reload nginx
- name: create /srv/letsencrypt
  file:
    state: directory
    path: /srv/letsencrypt
- name: nginx redirect config
  copy:
    dest: /etc/nginx/conf.d/redirect.conf
    content: |
      server {
        listen 80 default_server;
        listen [::]:80 default_server;
        location /.well-known/acme-challenge {
          root /srv/letsencrypt;
        }
        location / {
          return 301 https://$host$request_uri;
        }
      }
  notify: reload nginx
- name: ensure nginx started
  service: name=nginx state=started
  # make sure nginx is set up to allow certbot to work
- meta: flush_handlers
- name: add certbot repo
  apt_repository:
    repo: ppa:certbot/certbot
- name: install certbot
  apt: state=present name=certbot
# certbot will only renew on domain name change and/or nearing expiration.
# changing --deploy-hook won't work, changing other parameters may not work
# as well
# also adding/removing --must-staple doesn't work
# WARNING: --must-staple is not used because nginx doesn't send the OCSP staple
# with the first request because reasons
- name: activate certificates
  command: >
    certbot certonly --noninteractive --cert-name {{ item.cert_name }} --webroot
    --deploy-hook "service nginx reload" -w /srv/letsencrypt
    --agree-tos --email {{ nginx_letsencrypt_email }}
    -d {{ item.domains | join(",") }}
  register: certificate_action
  changed_when: "'no action taken' not in certificate_action.stdout"
  with_items: "{{ nginx_certificates }}"
- name: nginx create website directories
  file:
    state: directory
    dest: "{{ item.directory }}"
  when: item.directory is defined
  with_items: "{{ nginx_websites }}"
- name: nginx install website configs
  template:
    src: website.conf.j2
    dest: /etc/nginx/conf.d/{{ item.domain }}.conf
  with_items: "{{ nginx_websites }}"
  notify: reload nginx
  