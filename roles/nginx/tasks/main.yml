---
- name: include variables for certificate type
  include_vars: "{{ nginx_certificate_type }}.yml"
- name: add nginx apt key
  apt_key:
    state: present
    url: https://nginx.org/keys/nginx_signing.key
- name: add nginx mainline apt repository
  apt_repository:
    state: present
    repo: deb http://nginx.org/packages/mainline/ubuntu/ {{ ansible_lsb.codename }} nginx
- name: install nginx
  apt: name=nginx state=present
- name: remove nginx default site
  file:
    state: absent
    path: /etc/nginx/conf.d/default.conf
  notify: reload nginx
- name: create /srv/letsencrypt
  file:
    state: directory
    path: /srv/letsencrypt
- name: nginx redirect config
  copy:
    dest: /etc/nginx/conf.d/redirect.conf
    content: |
      server {
        listen 80 default_server;
        listen [::]:80 default_server;
        location /.well-known/acme-challenge {
          root /srv/letsencrypt;
        }
        location / {
          return 301 https://$host$request_uri;
        }
      }
  notify: reload nginx
- name: ensure nginx started
  service: name=nginx state=started
  # make sure nginx is set up to allow certbot to work
- meta: flush_handlers
- import_tasks: selfsigned.yml
  when: nginx_certificate_type == 'selfsigned'
- import_tasks: letsencrypt.yml
  when: nginx_certificate_type == 'letsencrypt'
- name: nginx create website directories
  file:
    state: directory
    dest: "{{ item.directory }}"
  when: item.directory is defined
  with_items: "{{ nginx_websites }}"
- name: nginx install website configs
  template:
    src: website.conf.j2
    dest: /etc/nginx/conf.d/{{ item.domain }}.conf
  with_items: "{{ nginx_websites }}"
  notify: reload nginx
  